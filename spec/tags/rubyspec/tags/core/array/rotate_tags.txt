fails:Array#rotate returns a copy of the array when its length is one or zero
fails:Array#rotate does not mutate the receiver
fails:Array#rotate does not return self
fails:Array#rotate does not return subclass instance for Array subclasses
fails:Array#rotate when passed no argument returns a copy of the array with the first element moved at the end
fails:Array#rotate with an argument n returns a copy of the array with the first (n % size) elements moved at the end
fails:Array#rotate with an argument n coerces the argument using to_int
fails:Array#rotate with an argument n raises a TypeError if not passed an integer-like argument
fails:Array#rotate! does nothing and returns self when the length is zero or one
fails:Array#rotate! raises a RuntimeError on a frozen array
fails:Array#rotate! when passed no argument moves the first element to the end and returns self
fails:Array#rotate! with an argument n moves the first (n % size) elements at the end and returns self
fails:Array#rotate! with an argument n coerces the argument using to_int
fails:Array#rotate! with an argument n raises a TypeError if not passed an integer-like argument
