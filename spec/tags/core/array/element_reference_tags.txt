fails:Array#[] returns the subarray which is independent to self with [index,count]
fails:Array#[] returns the subarray which is independent to self with [m..n]
fails:Array#[] tries to convert Range elements to Integers using #to_int with [m..n] and [m...n]
fails:Array#[] returns the same elements as [m..n] and [m...n] with Range subclasses
fails:Array#[] raises a RangeError when the start index is out of range of Fixnum
fails:Array#[] raises a RangeError when the length is out of range of Fixnum
fails:Array#[] with a subclass of Array returns a subclass instance with [n, m]
fails:Array#[] with a subclass of Array returns a subclass instance with [-n, m]
fails:Array#[] with a subclass of Array returns a subclass instance with [n..m]
fails:Array#[] with a subclass of Array returns a subclass instance with [n...m]
fails:Array#[] with a subclass of Array returns a subclass instance with [-n..-m]
fails:Array#[] with a subclass of Array returns a subclass instance with [-n...-m]
fails:Array#[] with a subclass of Array returns an empty array when m == n with [m...n]
fails:Array#[] with a subclass of Array returns an empty array with [0...0]
fails:Array#[] with a subclass of Array returns an empty array when m > n and m, n are positive with [m..n]
fails:Array#[] with a subclass of Array returns an empty array when m > n and m, n are negative with [m..n]
fails:Array#[] with a subclass of Array returns [] if index == array.size with [index, length]
fails:Array#[] with a subclass of Array returns [] if the index is valid but length is zero with [index, length]
fails:Array#[] with a subclass of Array does not call #initialize on the subclass instance
fails:Array.[] [] should return a new array populated with the given elements
fails:Array.[] when applied to a literal nested array, unpacks its elements into the containing array
fails:Array.[] when applied to a nested referenced array, unpacks its elements into the containing array
fails:Array.[] can unpack 2 or more nested referenced array
fails:Array.[] constructs a nested Hash for tailing key-value pairs
fails:Array.[] with a subclass of Array returns an instance of the subclass
fails:Array.[] with a subclass of Array does not call #initialize on the subclass instance
fails:Array#[] 
